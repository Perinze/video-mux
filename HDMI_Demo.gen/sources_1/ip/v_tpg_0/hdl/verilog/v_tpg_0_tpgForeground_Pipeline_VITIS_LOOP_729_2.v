// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module v_tpg_0_tpgForeground_Pipeline_VITIS_LOOP_729_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bckgndYUV_dout,
        bckgndYUV_num_data_valid,
        bckgndYUV_fifo_cap,
        bckgndYUV_empty_n,
        bckgndYUV_read,
        ovrlayYUV_din,
        ovrlayYUV_num_data_valid,
        ovrlayYUV_fifo_cap,
        ovrlayYUV_full_n,
        ovrlayYUV_write,
        boxHCoord_loc_0,
        boxVCoord_loc_0,
        loopWidth,
        pixOut_val_V_9,
        pixOut_val_V,
        pixOut_val_V_7,
        and4_i,
        and26_i,
        tobool,
        and10_i,
        ovrlayId_load,
        boxSize_1,
        y,
        zext_ln1869,
        vMax,
        hMax,
        zext_ln1869_1,
        cmp101_i,
        boxColorG_1,
        crossHairX_1,
        cmp2_i,
        color,
        boxHCoord_loc_1_out,
        boxHCoord_loc_1_out_ap_vld,
        boxVCoord_loc_1_out,
        boxVCoord_loc_1_out_ap_vld,
        boxHCoord,
        boxHCoord_ap_vld,
        boxVCoord,
        boxVCoord_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] bckgndYUV_dout;
input  [4:0] bckgndYUV_num_data_valid;
input  [4:0] bckgndYUV_fifo_cap;
input   bckgndYUV_empty_n;
output   bckgndYUV_read;
output  [23:0] ovrlayYUV_din;
input  [4:0] ovrlayYUV_num_data_valid;
input  [4:0] ovrlayYUV_fifo_cap;
input   ovrlayYUV_full_n;
output   ovrlayYUV_write;
input  [15:0] boxHCoord_loc_0;
input  [15:0] boxVCoord_loc_0;
input  [15:0] loopWidth;
input  [7:0] pixOut_val_V_9;
input  [7:0] pixOut_val_V;
input  [7:0] pixOut_val_V_7;
input  [0:0] and4_i;
input  [0:0] and26_i;
input  [0:0] tobool;
input  [0:0] and10_i;
input  [7:0] ovrlayId_load;
input  [15:0] boxSize_1;
input  [15:0] y;
input  [7:0] zext_ln1869;
input  [15:0] vMax;
input  [15:0] hMax;
input  [8:0] zext_ln1869_1;
input  [0:0] cmp101_i;
input  [7:0] boxColorG_1;
input  [15:0] crossHairX_1;
input  [0:0] cmp2_i;
input  [7:0] color;
output  [15:0] boxHCoord_loc_1_out;
output   boxHCoord_loc_1_out_ap_vld;
output  [15:0] boxVCoord_loc_1_out;
output   boxVCoord_loc_1_out_ap_vld;
output  [15:0] boxHCoord;
output   boxHCoord_ap_vld;
output  [15:0] boxVCoord;
output   boxVCoord_ap_vld;

reg ap_idle;
reg bckgndYUV_read;
reg ovrlayYUV_write;
reg boxHCoord_loc_1_out_ap_vld;
reg boxVCoord_loc_1_out_ap_vld;
reg boxHCoord_ap_vld;
reg boxVCoord_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln729_reg_909;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln729_fu_432_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] vDir;
reg   [0:0] hDir;
wire   [1:0] whiYuv_2_address0;
reg    whiYuv_2_ce0;
wire   [7:0] whiYuv_2_q0;
reg    ovrlayYUV_blk_n;
wire    ap_block_pp0_stage0;
reg    bckgndYUV_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] color_read_reg_779;
reg   [15:0] crossHairX_1_read_reg_788;
reg   [7:0] boxColorG_1_read_reg_793;
reg   [0:0] cmp101_i_read_reg_798;
reg   [15:0] hMax_read_reg_803;
reg   [15:0] vMax_read_reg_808;
reg   [15:0] boxSize_1_read_reg_820;
reg   [7:0] ovrlayId_load_read_reg_826;
reg   [0:0] and10_i_read_reg_830;
reg   [0:0] tobool_read_reg_835;
reg   [0:0] and26_i_read_reg_842;
reg   [0:0] and4_i_read_reg_847;
reg   [7:0] pixOut_val_V_7_read_reg_852;
reg   [7:0] pixOut_val_V_read_reg_857;
reg   [7:0] pixOut_val_V_9_read_reg_863;
reg   [15:0] loopWidth_read_reg_869;
wire   [15:0] zext_ln1869_1_cast_fu_396_p1;
reg   [15:0] zext_ln1869_1_cast_reg_874;
wire   [15:0] zext_ln1869_cast_fu_400_p1;
reg   [15:0] zext_ln1869_cast_reg_880;
reg   [15:0] x_1_reg_888;
reg   [15:0] boxTop_load_reg_894;
reg   [15:0] boxLeft_load_reg_899;
wire   [0:0] trunc_ln729_fu_428_p1;
reg   [0:0] trunc_ln729_reg_904;
reg   [0:0] icmp_ln729_reg_909_pp0_iter2_reg;
wire   [0:0] icmp_ln1839_fu_448_p2;
wire   [0:0] hDir_load_load_fu_454_p1;
wire   [0:0] icmp_ln1844_fu_458_p2;
wire   [0:0] icmp_ln1849_fu_469_p2;
wire   [0:0] vDir_load_load_fu_480_p1;
wire   [0:0] icmp_ln1856_fu_484_p2;
wire   [0:0] icmp_ln1861_fu_495_p2;
wire   [0:0] or_ln1918_fu_569_p2;
reg   [0:0] or_ln1918_reg_941;
wire   [7:0] pixIn_val_V_fu_593_p1;
reg   [7:0] pixIn_val_V_reg_950;
reg   [7:0] pixIn_val_V_5_reg_957;
reg   [7:0] pixIn_val_V_6_reg_964;
wire   [0:0] and_ln1897_fu_677_p2;
reg   [0:0] and_ln1897_reg_971;
wire   [7:0] pixOut_val_V_8_fu_687_p3;
reg   [0:0] ap_phi_mux_empty_65_phi_fu_299_p8;
wire   [0:0] ap_phi_reg_pp0_iter1_empty_65_reg_296;
reg   [0:0] ap_phi_mux_empty_64_phi_fu_316_p8;
wire   [0:0] ap_phi_reg_pp0_iter1_empty_64_reg_313;
reg   [1:0] ap_phi_mux_phi_ln1930_phi_fu_333_p4;
wire   [1:0] select_ln1930_fu_574_p3;
wire   [1:0] ap_phi_reg_pp0_iter1_phi_ln1930_reg_330;
reg   [7:0] ap_phi_mux_pix_val_V_4_phi_fu_343_p12;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_4_reg_340;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_4_reg_340;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_4_reg_340;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340;
reg   [7:0] ap_phi_mux_pix_val_V_3_phi_fu_361_p12;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_3_reg_357;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_3_reg_357;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_3_reg_357;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357;
reg   [7:0] ap_phi_mux_pix_val_V_phi_fu_380_p12;
wire   [7:0] ap_phi_reg_pp0_iter0_pix_val_V_reg_376;
reg   [7:0] ap_phi_reg_pp0_iter1_pix_val_V_reg_376;
reg   [7:0] ap_phi_reg_pp0_iter2_pix_val_V_reg_376;
reg   [7:0] ap_phi_reg_pp0_iter3_pix_val_V_reg_376;
wire   [63:0] zext_ln1930_fu_583_p1;
wire   [15:0] select_ln1866_fu_516_p3;
wire   [15:0] select_ln1870_fu_540_p3;
reg   [15:0] x_fu_126;
wire   [15:0] x_2_fu_437_p2;
wire    ap_loop_init;
reg   [15:0] boxTop_fu_130;
reg   [15:0] boxLeft_fu_134;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] or_ln1839_fu_443_p2;
wire   [15:0] sub_ln1869_fu_506_p2;
wire   [15:0] add_ln1867_fu_511_p2;
wire   [15:0] sub_ln1873_fu_530_p2;
wire   [15:0] add_ln1871_fu_535_p2;
wire   [0:0] icmp_ln1918_fu_564_p2;
wire   [0:0] icmp_ln1887_fu_633_p2;
wire   [15:0] boxBottom_fu_628_p2;
wire   [0:0] icmp_ln1892_fu_649_p2;
wire   [15:0] boxRight_fu_623_p2;
wire   [0:0] icmp_ln1887_1_fu_644_p2;
wire   [0:0] xor_ln1887_fu_638_p2;
wire   [0:0] icmp_ln1892_1_fu_660_p2;
wire   [0:0] xor_ln1892_fu_654_p2;
wire   [0:0] and_ln1897_2_fu_671_p2;
wire   [0:0] and_ln1897_1_fu_665_p2;
wire   [0:0] and_ln1902_fu_683_p2;
wire   [7:0] pixOut_val_V_14_fu_700_p3;
wire   [7:0] pixOut_val_V_13_fu_693_p3;
wire   [7:0] select_ln1946_fu_721_p3;
wire   [7:0] pixOut_val_V_15_fu_707_p3;
wire   [7:0] empty_fu_728_p3;
wire   [7:0] pixOut_val_V_16_fu_714_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_290;
reg    ap_condition_385;
reg    ap_condition_224;
reg    ap_condition_673;
reg    ap_condition_416;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 vDir = 1'd0;
#0 hDir = 1'd0;
#0 ap_done_reg = 1'b0;
end

v_tpg_0_tpgForeground_Pipeline_VITIS_LOOP_729_2_whiYuv_2_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
whiYuv_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(whiYuv_2_address0),
    .ce0(whiYuv_2_ce0),
    .q0(whiYuv_2_q0)
);

v_tpg_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((1'b1 == ap_condition_385)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_3_reg_357 <= 8'd240;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_3_reg_357 <= ap_phi_reg_pp0_iter1_pix_val_V_3_reg_357;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((1'b1 == ap_condition_385)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_4_reg_340 <= pixOut_val_V_read_reg_857;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_4_reg_340 <= ap_phi_reg_pp0_iter1_pix_val_V_4_reg_340;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_224)) begin
        if ((1'b1 == ap_condition_385)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_376 <= 8'd240;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pix_val_V_reg_376 <= ap_phi_reg_pp0_iter1_pix_val_V_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(color_read_reg_779 == 8'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357 <= whiYuv_2_q0;
    end else if (((1'd1 == and_ln1897_fu_677_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357 <= pixOut_val_V_8_fu_687_p3;
    end else if (((~(ovrlayId_load_read_reg_826 == 8'd2) & ~(ovrlayId_load_read_reg_826 == 8'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2)))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357 <= {{bckgndYUV_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357 <= ap_phi_reg_pp0_iter2_pix_val_V_3_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if ((~(color_read_reg_779 == 8'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340 <= pixOut_val_V_read_reg_857;
    end else if (((1'd1 == and_ln1897_fu_677_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340 <= pixOut_val_V_9_read_reg_863;
    end else if (((~(ovrlayId_load_read_reg_826 == 8'd2) & ~(ovrlayId_load_read_reg_826 == 8'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2)))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340 <= {{bckgndYUV_dout[23:16]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340 <= ap_phi_reg_pp0_iter2_pix_val_V_4_reg_340;
    end
end

always @ (posedge ap_clk) begin
    if ((~(color_read_reg_779 == 8'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_reg_376 <= 8'd240;
    end else if (((1'd1 == and_ln1897_fu_677_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_reg_376 <= pixOut_val_V_7_read_reg_852;
    end else if (((~(ovrlayId_load_read_reg_826 == 8'd2) & ~(ovrlayId_load_read_reg_826 == 8'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (or_ln1918_reg_941 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd2)))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_reg_376 <= pixIn_val_V_fu_593_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_pix_val_V_reg_376 <= ap_phi_reg_pp0_iter2_pix_val_V_reg_376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            boxLeft_fu_134 <= boxHCoord_loc_0;
        end else if ((1'b1 == ap_condition_673)) begin
            boxLeft_fu_134 <= select_ln1866_fu_516_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            boxTop_fu_130 <= boxVCoord_loc_0;
        end else if ((1'b1 == ap_condition_673)) begin
            boxTop_fu_130 <= select_ln1870_fu_540_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_416)) begin
        if (((icmp_ln1849_fu_469_p2 == 1'd1) & (hDir_load_load_fu_454_p1 == 1'd1))) begin
            hDir <= 1'd0;
        end else if (((icmp_ln1844_fu_458_p2 == 1'd1) & (hDir_load_load_fu_454_p1 == 1'd0))) begin
            hDir <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_416)) begin
        if (((icmp_ln1861_fu_495_p2 == 1'd1) & (vDir_load_load_fu_480_p1 == 1'd1))) begin
            vDir <= 1'd0;
        end else if (((icmp_ln1856_fu_484_p2 == 1'd1) & (vDir_load_load_fu_480_p1 == 1'd0))) begin
            vDir <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_126 <= 16'd0;
        end else if (((icmp_ln729_fu_432_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_126 <= x_2_fu_437_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and10_i_read_reg_830 <= and10_i;
        and26_i_read_reg_842 <= and26_i;
        and4_i_read_reg_847 <= and4_i;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        boxColorG_1_read_reg_793 <= boxColorG_1;
        boxSize_1_read_reg_820 <= boxSize_1;
        cmp101_i_read_reg_798 <= cmp101_i;
        color_read_reg_779 <= color;
        crossHairX_1_read_reg_788 <= crossHairX_1;
        hMax_read_reg_803 <= hMax;
        icmp_ln729_reg_909 <= icmp_ln729_fu_432_p2;
        loopWidth_read_reg_869 <= loopWidth;
        ovrlayId_load_read_reg_826 <= ovrlayId_load;
        pixOut_val_V_7_read_reg_852 <= pixOut_val_V_7;
        pixOut_val_V_9_read_reg_863 <= pixOut_val_V_9;
        pixOut_val_V_read_reg_857 <= pixOut_val_V;
        tobool_read_reg_835 <= tobool;
        trunc_ln729_reg_904 <= trunc_ln729_fu_428_p1;
        vMax_read_reg_808 <= vMax;
        x_1_reg_888 <= x_fu_126;
        zext_ln1869_1_cast_reg_874[8 : 0] <= zext_ln1869_1_cast_fu_396_p1[8 : 0];
        zext_ln1869_cast_reg_880[7 : 0] <= zext_ln1869_cast_fu_400_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        and_ln1897_reg_971 <= and_ln1897_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_pix_val_V_3_reg_357 <= ap_phi_reg_pp0_iter0_pix_val_V_3_reg_357;
        ap_phi_reg_pp0_iter1_pix_val_V_4_reg_340 <= ap_phi_reg_pp0_iter0_pix_val_V_4_reg_340;
        ap_phi_reg_pp0_iter1_pix_val_V_reg_376 <= ap_phi_reg_pp0_iter0_pix_val_V_reg_376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        boxLeft_load_reg_899 <= boxLeft_fu_134;
        boxTop_load_reg_894 <= boxTop_fu_130;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln729_reg_909_pp0_iter2_reg <= icmp_ln729_reg_909;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln729_fu_432_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ovrlayId_load_read_reg_826 == 8'd2))) begin
        or_ln1918_reg_941 <= or_ln1918_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0))) begin
        pixIn_val_V_5_reg_957 <= {{bckgndYUV_dout[15:8]}};
        pixIn_val_V_6_reg_964 <= {{bckgndYUV_dout[23:16]}};
        pixIn_val_V_reg_950 <= pixIn_val_V_fu_593_p1;
    end
end

always @ (*) begin
    if (((icmp_ln729_fu_432_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1861_fu_495_p2 == 1'd0) & (vDir_load_load_fu_480_p1 == 1'd1) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)) | ((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1856_fu_484_p2 == 1'd1) & (vDir_load_load_fu_480_p1 == 1'd0) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)))) begin
        ap_phi_mux_empty_64_phi_fu_316_p8 = 1'd1;
    end else if ((((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1856_fu_484_p2 == 1'd0) & (vDir_load_load_fu_480_p1 == 1'd0) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)) | ((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1861_fu_495_p2 == 1'd1) & (vDir_load_load_fu_480_p1 == 1'd1) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)))) begin
        ap_phi_mux_empty_64_phi_fu_316_p8 = 1'd0;
    end else begin
        ap_phi_mux_empty_64_phi_fu_316_p8 = ap_phi_reg_pp0_iter1_empty_64_reg_313;
    end
end

always @ (*) begin
    if ((((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1849_fu_469_p2 == 1'd0) & (hDir_load_load_fu_454_p1 == 1'd1) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)) | ((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1844_fu_458_p2 == 1'd1) & (hDir_load_load_fu_454_p1 == 1'd0) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)))) begin
        ap_phi_mux_empty_65_phi_fu_299_p8 = 1'd1;
    end else if ((((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1844_fu_458_p2 == 1'd0) & (hDir_load_load_fu_454_p1 == 1'd0) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)) | ((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1849_fu_469_p2 == 1'd1) & (hDir_load_load_fu_454_p1 == 1'd1) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd1)))) begin
        ap_phi_mux_empty_65_phi_fu_299_p8 = 1'd0;
    end else begin
        ap_phi_mux_empty_65_phi_fu_299_p8 = ap_phi_reg_pp0_iter1_empty_65_reg_296;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_290)) begin
        if ((color_read_reg_779 == 8'd1)) begin
            ap_phi_mux_phi_ln1930_phi_fu_333_p4 = 2'd1;
        end else if ((~(color_read_reg_779 == 8'd1) & ~(color_read_reg_779 == 8'd0))) begin
            ap_phi_mux_phi_ln1930_phi_fu_333_p4 = select_ln1930_fu_574_p3;
        end else begin
            ap_phi_mux_phi_ln1930_phi_fu_333_p4 = ap_phi_reg_pp0_iter1_phi_ln1930_reg_330;
        end
    end else begin
        ap_phi_mux_phi_ln1930_phi_fu_333_p4 = ap_phi_reg_pp0_iter1_phi_ln1930_reg_330;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln1897_reg_971) & (icmp_ln729_reg_909_pp0_iter2_reg == 1'd0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_mux_pix_val_V_3_phi_fu_361_p12 = pixIn_val_V_5_reg_957;
    end else begin
        ap_phi_mux_pix_val_V_3_phi_fu_361_p12 = ap_phi_reg_pp0_iter3_pix_val_V_3_reg_357;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln1897_reg_971) & (icmp_ln729_reg_909_pp0_iter2_reg == 1'd0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_mux_pix_val_V_4_phi_fu_343_p12 = pixIn_val_V_6_reg_964;
    end else begin
        ap_phi_mux_pix_val_V_4_phi_fu_343_p12 = ap_phi_reg_pp0_iter3_pix_val_V_4_reg_340;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln1897_reg_971) & (icmp_ln729_reg_909_pp0_iter2_reg == 1'd0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        ap_phi_mux_pix_val_V_phi_fu_380_p12 = pixIn_val_V_reg_950;
    end else begin
        ap_phi_mux_pix_val_V_phi_fu_380_p12 = ap_phi_reg_pp0_iter3_pix_val_V_reg_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bckgndYUV_blk_n = bckgndYUV_empty_n;
    end else begin
        bckgndYUV_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bckgndYUV_read = 1'b1;
    end else begin
        bckgndYUV_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln729_fu_432_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        boxHCoord_ap_vld = 1'b1;
    end else begin
        boxHCoord_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd1))) begin
        boxHCoord_loc_1_out_ap_vld = 1'b1;
    end else begin
        boxHCoord_loc_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln729_fu_432_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ovrlayId_load_read_reg_826 == 8'd1))) begin
        boxVCoord_ap_vld = 1'b1;
    end else begin
        boxVCoord_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln729_reg_909 == 1'd1))) begin
        boxVCoord_loc_1_out_ap_vld = 1'b1;
    end else begin
        boxVCoord_loc_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ovrlayYUV_blk_n = ovrlayYUV_full_n;
    end else begin
        ovrlayYUV_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ovrlayYUV_write = 1'b1;
    end else begin
        ovrlayYUV_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        whiYuv_2_ce0 = 1'b1;
    end else begin
        whiYuv_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1867_fu_511_p2 = (boxLeft_fu_134 + zext_ln1869_cast_reg_880);

assign add_ln1871_fu_535_p2 = (boxTop_fu_130 + zext_ln1869_cast_reg_880);

assign and_ln1897_1_fu_665_p2 = (xor_ln1887_fu_638_p2 & icmp_ln1887_1_fu_644_p2);

assign and_ln1897_2_fu_671_p2 = (xor_ln1892_fu_654_p2 & icmp_ln1892_1_fu_660_p2);

assign and_ln1897_fu_677_p2 = (and_ln1897_2_fu_671_p2 & and_ln1897_1_fu_665_p2);

assign and_ln1902_fu_683_p2 = (trunc_ln729_reg_904 & cmp101_i_read_reg_798);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln729_reg_909 == 1'd0) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln729_reg_909 == 1'd0) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ovrlayYUV_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln729_reg_909 == 1'd0) & (bckgndYUV_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln729_reg_909 == 1'd0) & (bckgndYUV_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (ovrlayYUV_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_224 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_290 = ((icmp_ln729_fu_432_p2 == 1'd0) & (or_ln1918_fu_569_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd2));
end

always @ (*) begin
    ap_condition_385 = ((icmp_ln729_fu_432_p2 == 1'd0) & (or_ln1918_fu_569_p2 == 1'd1) & (ovrlayId_load_read_reg_826 == 8'd2) & (color_read_reg_779 == 8'd0));
end

always @ (*) begin
    ap_condition_416 = ((icmp_ln729_fu_432_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ovrlayId_load_read_reg_826 == 8'd1));
end

always @ (*) begin
    ap_condition_673 = ((icmp_ln729_fu_432_p2 == 1'd0) & (icmp_ln1839_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ovrlayId_load_read_reg_826 == 8'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_pix_val_V_3_reg_357 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_4_reg_340 = 'bx;

assign ap_phi_reg_pp0_iter0_pix_val_V_reg_376 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_64_reg_313 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_65_reg_296 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln1930_reg_330 = 'bx;

assign boxBottom_fu_628_p2 = (boxSize_1_read_reg_820 + boxTop_fu_130);

assign boxHCoord = ((ap_phi_mux_empty_65_phi_fu_299_p8[0:0] == 1'b1) ? sub_ln1869_fu_506_p2 : add_ln1867_fu_511_p2);

assign boxHCoord_loc_1_out = boxLeft_load_reg_899;

assign boxRight_fu_623_p2 = (boxSize_1_read_reg_820 + boxLeft_fu_134);

assign boxVCoord = ((ap_phi_mux_empty_64_phi_fu_316_p8[0:0] == 1'b1) ? sub_ln1873_fu_530_p2 : add_ln1871_fu_535_p2);

assign boxVCoord_loc_1_out = boxTop_load_reg_894;

assign empty_fu_728_p3 = ((tobool_read_reg_835[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_3_phi_fu_361_p12 : select_ln1946_fu_721_p3);

assign hDir_load_load_fu_454_p1 = hDir;

assign icmp_ln1839_fu_448_p2 = ((or_ln1839_fu_443_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1844_fu_458_p2 = ((boxLeft_fu_134 > hMax_read_reg_803) ? 1'b1 : 1'b0);

assign icmp_ln1849_fu_469_p2 = ((zext_ln1869_1_cast_reg_874 > boxLeft_fu_134) ? 1'b1 : 1'b0);

assign icmp_ln1856_fu_484_p2 = ((boxTop_fu_130 > vMax_read_reg_808) ? 1'b1 : 1'b0);

assign icmp_ln1861_fu_495_p2 = ((zext_ln1869_1_cast_reg_874 > boxTop_fu_130) ? 1'b1 : 1'b0);

assign icmp_ln1887_1_fu_644_p2 = ((y < boxBottom_fu_628_p2) ? 1'b1 : 1'b0);

assign icmp_ln1887_fu_633_p2 = ((y < boxTop_fu_130) ? 1'b1 : 1'b0);

assign icmp_ln1892_1_fu_660_p2 = ((x_1_reg_888 < boxRight_fu_623_p2) ? 1'b1 : 1'b0);

assign icmp_ln1892_fu_649_p2 = ((x_1_reg_888 < boxLeft_fu_134) ? 1'b1 : 1'b0);

assign icmp_ln1918_fu_564_p2 = ((x_fu_126 == crossHairX_1_read_reg_788) ? 1'b1 : 1'b0);

assign icmp_ln729_fu_432_p2 = ((x_fu_126 == loopWidth_read_reg_869) ? 1'b1 : 1'b0);

assign or_ln1839_fu_443_p2 = (y | x_fu_126);

assign or_ln1918_fu_569_p2 = (icmp_ln1918_fu_564_p2 | cmp2_i);

assign ovrlayYUV_din = {{{pixOut_val_V_15_fu_707_p3}, {empty_fu_728_p3}}, {pixOut_val_V_16_fu_714_p3}};

assign pixIn_val_V_fu_593_p1 = bckgndYUV_dout[7:0];

assign pixOut_val_V_13_fu_693_p3 = ((and4_i_read_reg_847[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_phi_fu_380_p12);

assign pixOut_val_V_14_fu_700_p3 = ((and26_i_read_reg_842[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_4_phi_fu_343_p12);

assign pixOut_val_V_15_fu_707_p3 = ((tobool_read_reg_835[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_4_phi_fu_343_p12 : pixOut_val_V_14_fu_700_p3);

assign pixOut_val_V_16_fu_714_p3 = ((tobool_read_reg_835[0:0] == 1'b1) ? ap_phi_mux_pix_val_V_phi_fu_380_p12 : pixOut_val_V_13_fu_693_p3);

assign pixOut_val_V_8_fu_687_p3 = ((and_ln1902_fu_683_p2[0:0] == 1'b1) ? pixOut_val_V_9_read_reg_863 : boxColorG_1_read_reg_793);

assign select_ln1866_fu_516_p3 = ((ap_phi_mux_empty_65_phi_fu_299_p8[0:0] == 1'b1) ? sub_ln1869_fu_506_p2 : add_ln1867_fu_511_p2);

assign select_ln1870_fu_540_p3 = ((ap_phi_mux_empty_64_phi_fu_316_p8[0:0] == 1'b1) ? sub_ln1873_fu_530_p2 : add_ln1871_fu_535_p2);

assign select_ln1930_fu_574_p3 = ((trunc_ln729_fu_428_p1[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign select_ln1946_fu_721_p3 = ((and10_i_read_reg_830[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_pix_val_V_3_phi_fu_361_p12);

assign sub_ln1869_fu_506_p2 = (boxLeft_fu_134 - zext_ln1869_cast_reg_880);

assign sub_ln1873_fu_530_p2 = (boxTop_fu_130 - zext_ln1869_cast_reg_880);

assign trunc_ln729_fu_428_p1 = x_fu_126[0:0];

assign vDir_load_load_fu_480_p1 = vDir;

assign whiYuv_2_address0 = zext_ln1930_fu_583_p1;

assign x_2_fu_437_p2 = (x_fu_126 + 16'd1);

assign xor_ln1887_fu_638_p2 = (icmp_ln1887_fu_633_p2 ^ 1'd1);

assign xor_ln1892_fu_654_p2 = (icmp_ln1892_fu_649_p2 ^ 1'd1);

assign zext_ln1869_1_cast_fu_396_p1 = zext_ln1869_1;

assign zext_ln1869_cast_fu_400_p1 = zext_ln1869;

assign zext_ln1930_fu_583_p1 = ap_phi_mux_phi_ln1930_phi_fu_333_p4;

always @ (posedge ap_clk) begin
    zext_ln1869_1_cast_reg_874[15:9] <= 7'b0000000;
    zext_ln1869_cast_reg_880[15:8] <= 8'b00000000;
end

endmodule //v_tpg_0_tpgForeground_Pipeline_VITIS_LOOP_729_2
